version: '3.8'

services:
  # Production Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: src/backend/Dockerfile.prod
    container_name: foodsave-backend-prod
    ports:
      - "8000:8000"
    volumes:
      - backend_data:/app/data
      - backend_logs:/app/logs
      - backend_backups:/app/backups
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql+asyncpg://foodsave:${POSTGRES_PASSWORD:-foodsave_prod_password}@postgres:5432/foodsave_prod
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-SpeakLeash/bielik-4.5b-v3.0-instruct:Q8_0}
      - DEFAULT_CHAT_MODEL=${DEFAULT_CHAT_MODEL:-SpeakLeash/bielik-4.5b-v3.0-instruct:Q8_0}
      - DEFAULT_CODE_MODEL=${DEFAULT_CODE_MODEL:-SpeakLeash/bielik-4.5b-v3.0-instruct:Q8_0}
      - DEFAULT_EMBEDDING_MODEL=${DEFAULT_EMBEDDING_MODEL:-nomic-embed-text}
      - RAG_VECTOR_STORE_PATH=/app/data/vector_store
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://frontend:80,https://foodsave.local}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-here}
    networks:
      - foodsave-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Production Frontend with Nginx
  frontend:
    build:
      context: ./myappassistant-chat-frontend
      dockerfile: Dockerfile.prod
    container_name: foodsave-frontend-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - frontend_logs:/app/logs
      - frontend_ssl:/etc/nginx/ssl
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_TELEMETRY_DISABLED=1
    networks:
      - foodsave-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # PostgreSQL Database (Production)
  postgres:
    image: postgres:15-alpine
    container_name: foodsave-postgres-prod
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-foodsave_prod}
      - POSTGRES_USER=${POSTGRES_USER:-foodsave}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-foodsave_prod_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - foodsave-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-foodsave}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: foodsave-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - redis_logs:/var/log/redis
    command: ["redis-server", "--save", "60", "1", "--loglevel", "notice", "--appendonly", "yes", "--maxmemory", "512mb", "--maxmemory-policy", "allkeys-lru"]
    networks:
      - foodsave-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # Ollama for local LLM models (optional for production)
  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    container_name: foodsave-ollama-prod
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ollama_logs:/var/log/ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEP_ALIVE=24h
    networks:
      - foodsave-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434/api/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    profiles:
      - with-ollama

  # Nginx reverse proxy (optional - for SSL termination and load balancing)
  nginx-proxy:
    image: nginx:alpine
    container_name: foodsave-nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - foodsave-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
    profiles:
      - with-proxy

# Volumes for persistent data
volumes:
  backend_data:
    name: foodsave-backend-data-prod
  backend_logs:
    name: foodsave-backend-logs-prod
  backend_backups:
    name: foodsave-backend-backups-prod
  frontend_logs:
    name: foodsave-frontend-logs-prod
  frontend_ssl:
    name: foodsave-frontend-ssl-prod
  postgres_data:
    name: foodsave-postgres-data-prod
  postgres_logs:
    name: foodsave-postgres-logs-prod
  redis_data:
    name: foodsave-redis-data-prod
  redis_logs:
    name: foodsave-redis-logs-prod
  ollama_data:
    name: foodsave-ollama-data-prod
  ollama_logs:
    name: foodsave-ollama-logs-prod
  nginx_logs:
    name: foodsave-nginx-logs-prod

# Networks
networks:
  foodsave-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 