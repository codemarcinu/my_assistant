version: '3.8'

services:
  # Serwis Ollama dla lokalnych modeli LLM
  ollama:
    image: ollama/ollama:latest
    container_name: foodsave-ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEP_ALIVE=24h
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - foodsave-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:11434/api/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"

  # Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: foodsave-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=gemma:2b
      - DATABASE_URL=sqlite+aiosqlite:///./data/foodsave.db
      - SQLALCHEMY_DATABASE_URI=sqlite+aiosqlite:///./data/foodsave.db
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
      - RAG_VECTOR_STORE_PATH=/app/data/vector_store
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      # Volume mapping dla hot reload (komentarz podczas produkcji)
      # - ./src:/app/src:ro
      # - ./scripts:/app/scripts:ro
    depends_on:
      ollama:
        condition: service_started
    networks:
      - foodsave-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"

  # Frontend Next.js
  frontend:
    build:
      context: ./foodsave-frontend
      dockerfile: Dockerfile
    container_name: foodsave-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXT_PUBLIC_APP_NAME=FoodSave AI
    depends_on:
      backend:
        condition: service_started
    networks:
      - foodsave-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
    volumes:
      - ./foodsave-frontend:/app

  # Nginx Reverse Proxy (opcjonalny)
  nginx:
    image: nginx:alpine
    container_name: foodsave-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - foodsave-network
    restart: unless-stopped
    profiles:
      - production
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"

  # Redis dla cache (opcjonalny)
  redis:
    image: redis:7-alpine
    container_name: foodsave-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    command: ["redis-server", "--save", "60", "1", "--loglevel", "notice", "--logfile", "/var/log/redis/redis.log"]
    networks:
      - foodsave-network
    restart: unless-stopped
    profiles:
      - with-cache
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"

volumes:
  ollama_data:
    driver: local
  redis_data:
    driver: local

networks:
  foodsave-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
