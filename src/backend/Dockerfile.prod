# Multi-stage build for production backend
# ZALEŻNOŚCI INSTALOWANE PRZEZ POETRY (pyproject.toml) - BEST PRACTICE
FROM python:3.12-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    libopenblas-dev \
    libblas-dev \
    liblapack-dev \
    gfortran \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install poetry with increased timeouts and retry mechanism
RUN pip install --timeout 600 --retries 3 poetry && \
    poetry config virtualenvs.create false && \
    pip config set global.timeout 1800 && \
    pip config set global.retries 5

# Copy dependency files
COPY pyproject.toml poetry.lock ./

# Install dependencies with multiple retry attempts
RUN for i in 1 2 3; do \
        echo "Attempt $i to install dependencies..." && \
        poetry install --no-interaction --no-ansi && break || \
        (echo "Attempt $i failed, waiting before retry..." && sleep 60); \
    done

# Production stage
FROM python:3.12-slim AS production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    tesseract-ocr \
    libopenblas0 \
    libblas3 \
    liblapack3 \
    curl \
    libgl1-mesa-glx \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN groupadd -r foodsave && useradd -r -g foodsave foodsave

# Set working directory
WORKDIR /app

# Copy installed packages and python from builder
COPY --from=builder /usr/local /usr/local
ENV PATH="/usr/local/bin:/home/foodsave/.local/bin:$PATH"
RUN ls -l /usr/local/bin
RUN ls -l /home/foodsave/.local/bin || true

# Copy application code (from root context)
COPY src/backend ./backend

# Create necessary directories with proper permissions BEFORE switching user
RUN mkdir -p /app/logs /app/data /app/data/vector_store /app/backups /app/backups/config /app/backups/database /app/backups/files /app/backups/vector_store && \
    chown -R foodsave:foodsave /app && \
    chmod -R 755 /app/logs

# Switch to non-root user
USER foodsave

# Set environment variables
ENV PYTHONPATH=/app
ENV ENVIRONMENT=production
ENV LOG_LEVEL=INFO

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Command to run the application
CMD ["uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"] 