version: "3.8"

services:
  # Serwis Ollama dla lokalnych modeli LLM
  ollama:
    image: ollama/ollama
    container_name: foodsave-ollama-dev
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    tty: true
    pull_policy: always
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "ollama", "|", "grep", "-v", "grep"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - foodsave-network

  # Sidecar container to capture Ollama logs
  ollama-logger:
    image: alpine:latest
    container_name: foodsave-ollama-logger
    volumes:
      - ./logs/ollama:/var/log/ollama
      - ./scripts/ollama-logger.sh:/ollama-logger.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: sh /ollama-logger.sh
    depends_on:
      - ollama
    networks:
      - foodsave-network
    restart: unless-stopped

  # Backend FastAPI - Development z hot-reload
  backend:
    build:
      context: .
      dockerfile: src/backend/Dockerfile.dev
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    environment:
      - LOG_LEVEL=DEBUG
    tty: true
    stdin_open: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - ollama
    networks:
      - foodsave-network

  # Frontend Next.js - Development z hot-reload
  frontend:
    build:
      context: ./foodsave-frontend
      dockerfile: Dockerfile.dev.frontend
    ports:
      - "3000:3000"
    volumes:
      - ./foodsave-frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - foodsave-network

  # Redis for caching and message queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - foodsave-network

  # PostgreSQL dla development (opcjonalny)
  postgres:
    image: postgres:15-alpine
    container_name: foodsave-postgres-dev
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=foodsave_db
      - POSTGRES_USER=foodsave_user
      - POSTGRES_PASSWORD=foodsave_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U foodsave_user -d foodsave_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - foodsave-network

  # Prometheus dla monitoring (development)
  prometheus:
    image: prom/prometheus:latest
    container_name: foodsave-prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.dev.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - backend
    networks:
      - foodsave-network

  # Grafana dla wizualizacji (development)
  grafana:
    image: grafana/grafana:latest
    container_name: foodsave-grafana-dev
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - foodsave-network

  # Loki dla logów (development)
  loki:
    image: grafana/loki:latest
    container_name: foodsave-loki-dev
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yaml:/etc/loki/config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/config.yaml
    networks:
      - foodsave-network

  # Promtail dla zbierania logów (development)
  promtail:
    image: grafana/promtail:latest
    container_name: foodsave-promtail-dev
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./monitoring/promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - foodsave-network

volumes:
  ollama_data:
    driver: local
  redis-data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

networks:
  foodsave-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
