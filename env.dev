# FoodSave AI - Development Environment Configuration
# Plik konfiguracyjny dla uruchamiania w trybie developerskim z Docker

# =============================================================================
# PODSTAWOWE USTAWIENIA APLIKACJI
# =============================================================================

# Środowisko
ENVIRONMENT=development
LOG_LEVEL=DEBUG
APP_NAME=FoodSave AI
APP_VERSION=0.1.0

# =============================================================================
# KONFIGURACJA BAZY DANYCH
# =============================================================================

# PostgreSQL dla development (Docker)
POSTGRES_DB=foodsave_dev
POSTGRES_USER=foodsave
POSTGRES_PASSWORD=foodsave_dev_password
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
DATABASE_URL=postgresql+asyncpg://foodsave:foodsave_dev_password@postgres:5432/foodsave_dev

# =============================================================================
# KONFIGURACJA REDIS
# =============================================================================

# Redis - cache i sesje
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
REDIS_USE_CACHE=true
REDIS_URL=redis://redis:6379

# =============================================================================
# KONFIGURACJA CELERY (ZADANIA W TLE)
# =============================================================================

# Celery - broker i backend dla zadań asynchronicznych
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND_URL=redis://redis:6379/0
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=json
CELERY_TIMEZONE=Europe/Warsaw
CELERY_ENABLE_UTC=True
CELERY_TASK_TRACK_STARTED=True
CELERY_TASK_TIME_LIMIT=30*60  # 30 minut
CELERY_TASK_SOFT_TIME_LIMIT=25*60  # 25 minut
CELERY_WORKER_CONCURRENCY=2
CELERY_WORKER_PREFETCH_MULTIPLIER=1
CELERY_WORKER_MAX_TASKS_PER_CHILD=1000

# =============================================================================
# KONFIGURACJA OLLAMA (MODELI AI)
# =============================================================================

# URL do Ollama (lokalnie)
OLLAMA_URL=http://localhost:11434
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_HOST=0.0.0.0
OLLAMA_KEEP_ALIVE=24h
OLLAMA_DEBUG=true

# Modele językowe - wybierz te które masz zainstalowane
OLLAMA_MODEL=SpeakLeash/bielik-4.5b-v3.0-instruct:Q8_0
DEFAULT_CODE_MODEL=SpeakLeash/bielik-4.5b-v3.0-instruct:Q8_0
DEFAULT_CHAT_MODEL=SpeakLeash/bielik-4.5b-v3.0-instruct:Q8_0
DEFAULT_EMBEDDING_MODEL=nomic-embed-text

# Lista dostępnych modeli (w kolejności preferencji)
AVAILABLE_MODELS=["SpeakLeash/bielik-4.5b-v3.0-instruct:Q8_0", "SpeakLeash/bielik-11b-v2.3-instruct:Q5_K_M", "gemma3:12b", "gemma3:8b", "llama3.2:3b", "mistral:7b"]

# =============================================================================
# KONFIGURACJA MMLW (OPCJONALNE - LEPSZE DLA POLSKIEGO)
# =============================================================================

# Włącz MMLW dla lepszego rozumienia języka polskiego
USE_MMLW_EMBEDDINGS=true
MMLW_MODEL_NAME=sdadas/mmlw-retrieval-roberta-base

# =============================================================================
# KONFIGURACJA OCR (OPCJONALNE)
# =============================================================================

# Ścieżka do Tesseract (jeśli masz zainstalowane)
TESSDATA_PREFIX=/usr/share/tesseract-ocr/5/

# =============================================================================
# KLUCZE API (OPCJONALNE - DLA DODATKOWYCH FUNKCJI)
# =============================================================================

# Klucze do zewnętrznych serwisów (opcjonalne)
LLM_API_KEY=
OPENWEATHER_API_KEY=
WEATHER_API_KEY=
PERPLEXITY_API_KEY=
NEWS_API_KEY=
BING_SEARCH_API_KEY=

# =============================================================================
# KONFIGURACJA BEZPIECZEŃSTWA
# =============================================================================

# Klucz szyfrowania (automatycznie generowany jeśli pusty)
SECRET_KEY=your-super-secret-key-for-development-only

# Czas wygaśnięcia tokenów
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7
ALGORITHM=HS256

# JWT (jeśli używane)
JWT_SECRET_KEY=your-super-secret-jwt-key-for-development-only
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# KONFIGURACJA MONITORINGU
# =============================================================================

# Włącz szczegółowe logowanie
LOG_LEVEL=DEBUG
LOG_FORMAT=json
LOG_FILE_PATH=/app/logs/backend.log

# User Agent dla requestów HTTP
USER_AGENT=FoodSave-AI/1.0.0 (Development Mode)

# Prometheus
PROMETHEUS_MULTIPROC_DIR=/tmp
ENABLE_METRICS=true

# =============================================================================
# BACKEND - FASTAPI
# =============================================================================

# Port aplikacji
PORT=8000
HOST=0.0.0.0

# Hot reload
UVICORN_RELOAD=true
UVICORN_RELOAD_DIRS=/app/src

# Debug tools
ENABLE_DEBUG_TOOLBAR=true
ENABLE_SQL_LOGGING=true

# =============================================================================
# FRONTEND - REACT/VITE
# =============================================================================

# Next.js
NODE_ENV=development
VITE_API_URL=http://localhost:8000
VITE_DEV_SERVER_HOST=0.0.0.0
VITE_DEV_SERVER_PORT=3000
VITE_LOG_LEVEL=debug
NEXT_TELEMETRY_DISABLED=1

# =============================================================================
# CORS I BEZPIECZEŃSTWO
# =============================================================================

# CORS origins
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://frontend:3000,http://frontend:5173

# =============================================================================
# RAG SYSTEM
# =============================================================================

# Vector store
RAG_VECTOR_STORE_PATH=/app/data/vector_store_dev
RAG_CHUNK_SIZE=1000
RAG_CHUNK_OVERLAP=200

# =============================================================================
# MONITORING I LOGOWANIE
# =============================================================================

# Prometheus
PROMETHEUS_MULTIPROC_DIR=/tmp
ENABLE_METRICS=true

# Logging
LOG_FORMAT=json
LOG_FILE_PATH=/app/logs/backend.log

# =============================================================================
# EXTERNAL SERVICES (opcjonalne)
# =============================================================================

# Weather API (jeśli używane)
WEATHER_API_URL=https://api.openweathermap.org/data/2.5

# OCR Service (jeśli używane)
OCR_API_URL=https://api.ocr.space/parse/image

# =============================================================================
# DEVELOPMENT SPECIFIC
# =============================================================================

# Test data
LOAD_TEST_DATA=true
SEED_DATABASE=true

# Development tools
ENABLE_DEBUG_TOOLBAR=true
ENABLE_SQL_LOGGING=true

# =============================================================================
# TELEGRAM BOT (OPCJONALNE)
# =============================================================================

# Telegram Bot Configuration
TELEGRAM_BOT_TOKEN=
TELEGRAM_WEBHOOK_URL=
TELEGRAM_WEBHOOK_PATH=/webhook/telegram

# =============================================================================
# DOCKER SPECIFIC
# =============================================================================

# Docker Compose file
COMPOSE_FILE=docker-compose.dev.yaml

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Backend logging
BACKEND_LOG_LEVEL=DEBUG
BACKEND_LOG_FORMAT=json
BACKEND_LOG_FILE=/app/logs/backend.log

# Frontend logging
FRONTEND_LOG_LEVEL=debug
FRONTEND_LOG_FILE=/app/logs/frontend.log

# Database logging
DB_LOG_LEVEL=DEBUG
DB_LOG_FILE=/app/logs/postgres.log

# Redis logging
REDIS_LOG_LEVEL=notice
REDIS_LOG_FILE=/app/logs/redis.log

# Ollama logging
OLLAMA_LOG_LEVEL=debug
OLLAMA_LOG_FILE=/app/logs/ollama.log

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Database connection pool
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# Redis connection pool
REDIS_POOL_SIZE=10
REDIS_MAX_CONNECTIONS=20

# Ollama settings - OPTYMALIZACJA DLA RTX 3060
OLLAMA_NUM_PARALLEL=6
OLLAMA_NUM_GPU=1
OLLAMA_GPU_LAYERS=35
OLLAMA_CPU_LAYERS=10

# GPU Optimization for RTX 3060
CUDA_VISIBLE_DEVICES=0
CUDA_LAUNCH_BLOCKING=0
TORCH_CUDA_ARCH_LIST=8.6
CUDA_MEMORY_FRACTION=0.8

# Memory optimization
PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
CUDA_MEMORY_POOL_SIZE=1073741824 