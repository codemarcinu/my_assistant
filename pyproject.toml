[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.poetry]
name = "foodsave-ai"
version = "0.1.0"
description = ""
authors = ["Author Name <author@example.com>"]
packages = [
    { include = "backend" }
]

[tool.poetry.dependencies]
python = "^3.12"

# API Group
fastapi = "^0.115.0"
uvicorn = { extras = ["standard"], version = "^0.29.0" }
python-multipart = "^0.0.9"
slowapi = "^0.1.9"
httpx = "^0.27.0"
pydantic = "^2.11.0"
pydantic-settings = "^2.0"
python-dotenv = "^1.0.0"

# Database Group
aiosqlite = "^0.19.0"
greenlet = "^3.0.3"

# AI and Machine Learning Group
ollama = "^0.1.0"
langchain = "^0.3.25"
langchain-community = "^0.3.25"
numpy = "^2.1.0"
faiss-cpu = "^1.7.4"
sentence-transformers = "^2.2.2"
pytesseract = "^0.3.10"
PyMuPDF = "^1.24.1"

# Monitoring and Observability Group
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
opentelemetry-instrumentation-fastapi = "^0.42b0"
opentelemetry-instrumentation-sqlalchemy = "^0.42b0"
opentelemetry-instrumentation-httpx = "^0.42b0"
opentelemetry-exporter-jaeger = "^1.21.0"
prometheus-client = "^0.19.0"
prometheus-fastapi-instrumentator = "^6.1.0"

# Utilities
pytz = "^2024.1"
psutil = "^7.0.0"
structlog = "^24.1.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.41"}
dependency-injector = "^4.41.0"
torch = "^2.7.1"
transformers = "^4.52.4"
redis = "^5.2.0"
pybreaker = "^1.3.0"
langdetect = "1.0.9"

[tool.poetry.group.dev.dependencies]
mypy = "^1.16.1"
pytest = "^8.0"
pytest-cov = "^4.0"
pytest-asyncio = "^0.20.0"
pytest-benchmark = "^4.0.0"
pre-commit = "^3.0"
black = "^25.0"
isort = "^5.10.1"
flake8 = "^6.0"
bandit = "^1.7.4"
safety = "^2.3.2"
ruff = "^0.4.4"
types-requests = "^2.31.0"
memory-profiler = "^0.61.0"
memray = "^1.12.0"
locust = "^2.20.0"
debugpy = "^1.8.14"
pylint = "^3.3.7"
types-aiofiles = "^24.1.0.20250606"

[tool.pytest.ini_options]
pythonpath = ["src"]
markers = [
    "e2e: marks tests as end-to-end",
    "performance: marks tests as performance tests",
    "memory: marks tests as memory profiling tests"
]

[tool.pytest-benchmark]
min_rounds = 5
max_time = 10.0
warmup = true
