server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/lib/docker/containers/*/*log

    pipeline_stages:
      - json:
          expressions:
            stream: stream
            attrs: attrs
            tag: attrs.tag
            time: time
      - labels:
          stream:
          tag:
      - timestamp:
          source: time
          format: RFC3339Nano
      - output:
          source: log

  # Application logs from mounted volumes
  - job_name: application_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: application_logs
          __path__: /var/log/app/**/*.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z)\s+(?P<level>\w+)\s+(?P<service>\w+)\s+(?P<message>.*)$'
      - labels:
          level:
          service:
      - timestamp:
          source: timestamp
          format: RFC3339Nano

  # Backend logs
  - job_name: backend_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: backend_logs
          service: backend
          __path__: /var/log/app/backend/*.log

    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
      - labels:
          level:
          service:
      - timestamp:
          source: timestamp
          format: RFC3339Nano

  # Frontend logs
  - job_name: frontend_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: frontend_logs
          service: frontend
          __path__: /var/log/app/frontend/*.log

    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
      - labels:
          level:
          service:
      - timestamp:
          source: timestamp
          format: RFC3339Nano

  # Ollama logs
  - job_name: ollama_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: ollama_logs
          service: ollama
          __path__: /var/log/app/ollama/*.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z)\s+(?P<level>\w+)\s+(?P<message>.*)$'
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: RFC3339Nano

  # PostgreSQL logs
  - job_name: postgres_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres_logs
          service: postgres
          __path__: /var/log/app/postgres/*.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2})\s+(?P<level>\w+)\s+(?P<message>.*)$'
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: "2006-01-02 15:04:05"

  # Redis logs
  - job_name: redis_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis_logs
          service: redis
          __path__: /var/log/app/redis/*.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{1,2}\s+\w+\s+\d{2}:\d{2}:\d{2})\s+(?P<level>\w+)\s+(?P<message>.*)$'
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: "2 Jan 15:04:05"
