# FoodSave AI - Backend Development Dockerfile
# Wieloetapowy obraz z Poetry dla środowiska developerskiego

# Etap 1: Builder - instalacja zależności
FROM python:3.12-slim as builder

# Konfiguracja środowiska
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=300 \
    POETRY_VERSION=1.7.1 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VENV="/opt/poetry-venv" \
    POETRY_CACHE_DIR="/opt/.cache"

# Dodanie Poetry do PATH
ENV PATH="$POETRY_HOME/bin:$POETRY_VENV/bin:$PATH"

# Instalacja systemowych zależności
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Instalacja Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -

# Ustawienie katalogu roboczego
WORKDIR /app

# Kopiowanie plików konfiguracyjnych Poetry
COPY pyproject.toml poetry.lock* ./

# Instalacja zależności przez Poetry (bez instalacji pakietu)
RUN poetry config virtualenvs.create false \
    && poetry install --no-interaction --no-ansi --only=main --no-root

# Etap 2: Runtime - finalny obraz
FROM python:3.12-slim as runtime

# Konfiguracja środowiska runtime
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/opt/venv/bin:$PATH"

# Instalacja systemowych zależności runtime
RUN apt-get update && apt-get install -y \
    curl \
    tesseract-ocr \
    libopenblas0-pthread \
    liblapack3 \
    vim \
    nano \
    htop \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Kopiowanie środowiska wirtualnego z etapu builder
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Tworzenie katalogów aplikacji
RUN mkdir -p /app/data /app/logs /app/backups /app/src/backend
WORKDIR /app

# Tworzenie użytkownika bez uprawnień root
RUN useradd --create-home --shell /bin/bash app && \
    chown -R app:app /app
USER app

# Ekspozycja portu
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Domyślna komenda uruchomienia z hot-reload
CMD ["sh", "-c", "poetry run uvicorn src.backend.main:app --reload --host 0.0.0.0 --port 8000"]
